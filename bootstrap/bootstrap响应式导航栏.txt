为了给导航栏添加响应式特性，要折叠的内容必须包裹在带有 class .collapse、.navbar-collapse 的 <div> 中。
折叠起来的导航栏实际上是一个带有 class .navbar-toggle 及两个 data- 元素的按钮。
第一个是 data-toggle，用于告诉 JavaScript 需要对按钮做什么，第二个是 data-target，指示要切换到哪一个元素。
三个带有 class .icon-bar 的 <span> 创建所谓的汉堡按钮。这些会切换为 .nav-collapse <div> 中的元素。
为了实现以上这些功能，必须包含 Bootstrap 折叠（Collapse）插件。

导航栏中的表单
导航栏中的表单不是使用 Bootstrap 表单 章节中所讲到的默认的 class，
它是使用 .navbar-form class。这确保了表单适当的垂直对齐和在较窄的视口中折叠的行为。
使用对齐方式选项（这将在组件对齐方式部分进行详细讲解）来决定导航栏中的内容放置在哪里。

<nav class="navbar navbar-default" role="navigation">
    <div class="container-fluid"> 
    <div class="navbar-header">
        <a class="navbar-brand" href="#">响应式导航栏</a>
    </div>
    <form class="navbar-form navbar-left" role="search">
        <div class="form-group">
            <input type="text" class="form-control" placeholder="Search">
        </div>
        <button type="submit" class="btn btn-default">提交</button>
    </form>
    </div>
</nav>


导航栏中的按钮和文字
使用 class .navbar-btn 向不在 <form> 中的 <button> 元素添加按钮，按钮在导航栏上垂直居中。.navbar-btn 可被使用在 <a> 和 <input> 元素上。
如果需要在导航中包含文本字符串，请使用 class .navbar-text。这通常与 <p> 标签一起使用，确保适当的前导和颜色。
<nav class="navbar navbar-default" role="navigation">
    <div class="container-fluid">
    <div class="navbar-header">
        <a class="navbar-brand" href="#">响应式导航栏</a>
    </div>
    <div>
        <p class="navbar-text">Runoob 用户登录</p>
    </div>
    <div>
        <form class="navbar-form navbar-left" role="search">
            <div class="form-group">
                <input type="text" class="form-control" placeholder="Search">
            </div>
            <button type="submit" class="btn btn-default">提交按钮</button>
        </form>
        <button type="button" class="btn btn-default navbar-btn">
            导航栏按钮
        </button>
    </div>
    </div>
</nav>



结合图标的导航链接
在常规的导航栏导航组件内使用图标，使用 class glyphicon glyphicon-* 来设置图标
<ul class="nav navbar-nav navbar-right"> 
            <li><a href="#"><span class="glyphicon glyphicon-user"></span> 注册</a></li> 
            <li><a href="#"><span class="glyphicon glyphicon-log-in"></span> 登录</a></li> 
        </ul> 


组件对齐方式
使用实用工具 class .navbar-left 或 .navbar-right 向左或向右对齐导航栏中的 导航链接、表单、按钮或文本 这些组件。这两个 class 都会在指定的方向上添加 CSS 浮动。


固定到顶部/底部
Bootstrap 导航栏可以动态定位。默认情况下，它是块级元素，它是基于在 HTML 中放置的位置定位的。通过一些帮助器类，可以把它放置在页面的顶部或者底部，或者可以让它成为随着页面一起滚动的静态导航栏。
如果想要让导航栏固定在页面的顶部，向 .navbar class 添加 class .navbar-fixed-top。
想要让导航栏固定在页面的底部，向 .navbar class 添加 class .navbar-fixed-bottom。
为了防止导航栏与页面主体中的其他内容的顶部相交错，请向 <body> 标签添加至少 50 像素的内边距（padding），内边距的值可以根据需要进行设置。

静态的顶部
如需创建能随着页面一起滚动的导航栏，添加 .navbar-static-top class。该 class 不要求向 <body> 添加内边距（padding）。


反色的导航栏
为了创建一个带有黑色背景白色文本的反色的导航栏，只需要简单地向 .navbar class 添加 .navbar-inverse class 即可


<nav class="navbar navbar-fixed-top" role="navigation">  
			<div class="container">  <--关于container类-->
				<div class="navbar-header">
        		<button type="button" class="navbar-toggle collapsed" data-toggle="collapse"
                	data-target="#top-navbar-collapse" >
		            <span class="sr-only">切换导航</span>
		            <span class="icon-bar"></span>
		            <span class="icon-bar"></span>
		            <span class="icon-bar"></span>
		        </button>
        	<a class="navbar-brand" href="index.html" id="a1">响应式导航栏</a>
    </div>
    <div class="collapse navbar-collapse" id="top-navbar-collapse">
        <ul class="nav navbar-nav navbar-right">
            <li ><a href="#" >上传</a></li>                      
            <li ><a href="#" >查询</a></li> 
            <li><a  href="#" >验证</a></li> 
            <li><a  href="#" >展示</a></li>
        </ul>
    </div>
    </div>
</nav>


关于container类
bootstrap的container类是非常有用的，它能在页面中创建一个居中的区域，然后我们能够把其他位置的内容放到里面。
container类等价于创建了一个具有静态宽度并且magin值为auto的一个居中的div框。
twitter bootstrap的 container类的优点在于它是响应式的，它会以当前屏幕的宽度为基础计算出最佳的宽度予以实用。